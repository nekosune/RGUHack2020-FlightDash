<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    This file is Copyright Userware. All rights are reserved.
  -->
  <!--
    The code below is proprietary code. You are not allowed
    to modify nor reuse any portion of the code without prior
    written consent by Userware.
    http://www.userware-solutions.com
  -->

  <!--============================================================
  Import the "Microsoft.CSharp.targets" target if not already present in the CSPROJ:
  ============================================================-->
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" Condition=" '$(CoreCompileDependsOn)' == '' " />
  <!-- Note: The condition on the "CoreCompileDependsOn" property defined in "Microsoft.CSharp.targets" is here to avoid a warning if the target was already imported. We could have used any other property defined in "Microsoft.CSharp.targets". -->

  <!--============================================================
  Import the Bridge.NET target:
  ============================================================-->
  <Import Project="$(MSBuildThisFileDirectory)\Bridge.Min.targets" />

  <!--============================================================
  Ensure that the Simulator is launched when the project is launched:
  ============================================================-->
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(MSBuildThisFileDirectory)..\tools\simulator\CSharpXamlForHtml5.Simulator.exe</StartProgram>
    <StartArguments>"$(AssemblyName).dll"</StartArguments>
  </PropertyGroup>

  <!--============================================================
  Add the tasks "CSharpXamlForHtml5BeforeCompile" and "CSharpXamlForHtml5BeforeBuild" to the build process:
  ============================================================-->
  <PropertyGroup>
    <CompileDependsOn>
      CSharpXamlForHtml5BeforeCompile;
      $(CompileDependsOn);
    </CompileDependsOn>
  </PropertyGroup>

  <Target Name="CSharpXamlForHtml5BeforeCompile">
    <CallTarget Condition="'$(IsNotDesignTimeCompilation)' == 'true'"
      Targets="CSharpXamlForHtml5BeforeCompile_NotDesignTime" />
  </Target>

  <PropertyGroup>
    <BuildDependsOn>
      CSharpXamlForHtml5BeforeBuild;
      $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>

  <!--============================================================
  Set the default values for some properties (for example, if the output paths have not been specified, we set the default ones):
  ============================================================-->
  <PropertyGroup Condition="'$(IsSecondPass)'==''">
    <IsSecondPass>False</IsSecondPass>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Flags)'==''">
    <Flags>noflags</Flags>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Cshtml5OutputRootPath)'==''">
    <!-- Default output root path. This path can be either absolute, or relative to the "bin\Debug\" folder.. -->
    <Cshtml5OutputRootPath>Output\</Cshtml5OutputRootPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Cshtml5OutputAppFilesPath)'==''">
    <!-- Default sub-path for output application files. This path needs to be relative to the output root path. -->
    <Cshtml5OutputAppFilesPath>app-cshtml5\app\</Cshtml5OutputAppFilesPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Cshtml5OutputLibrariesPath)'==''">
    <!-- Default sub-path for output libraries. This path needs to be relative to the output root path. -->
    <Cshtml5OutputLibrariesPath>app-cshtml5\libs\</Cshtml5OutputLibrariesPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Cshtml5OutputResourcesPath)'==''">
    <!-- Default sub-path for output resources. This path needs to be relative to the output root path. -->
    <Cshtml5OutputResourcesPath>app-cshtml5\res\</Cshtml5OutputResourcesPath>
  </PropertyGroup>

  <!--============================================================
  Declare some local properties to make this file more concise:
  ============================================================-->
  <PropertyGroup>
    <IsProcessingCSHTML5Itself Condition="'$(NoCSHTML5Reference)'=='true'">True</IsProcessingCSHTML5Itself>
    <IsFirstPassAndProcessingCSHTML5Itself Condition="'$(IsSecondPass)'!='True' And '$(IsProcessingCSHTML5Itself)'=='True'">True</IsFirstPassAndProcessingCSHTML5Itself>
  </PropertyGroup>
  
  <!--============================================================
  Add the task "BeforeBridgeNetCompilerTaskCommon" to the build process:
  ============================================================-->
  <PropertyGroup>
    <PrepareForRunDependsOn>$(BeforeBridgeNetCompilerTaskCommon);$(PrepareForRunDependsOn)</PrepareForRunDependsOn>
  </PropertyGroup>

  <!--============================================================
  BEFORE BUILD
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforeBuild">
    <PropertyGroup>
      <IsNotDesignTimeCompilation>true</IsNotDesignTimeCompilation>
    </PropertyGroup>
    <Message
      Condition="'$(IsSecondPass)'!='True'"
      Text="Visual Studio version: $(VisualStudioVersion)"
      Importance="high"/>
    <Message
      Condition="'$(IsSecondPass)'!='True'"
      Text="CSHTML5 Pass 1"
      Importance="high"/>
    <Message
      Condition="'$(IsSecondPass)'=='True'"
      Text="CSHTML5 Pass 2"
      Importance="high"/>

    <!--============================================================
      If compiling CSHTML5 itself, remove some references:
      ============================================================-->
    <!-- If compiling CSHTML5 itself, we remove the reference to CSHTML5.dll -->
    <ItemGroup Condition="'$(NoCSHTML5Reference)'=='true'">
      <Reference Remove="CSHTML5"/>
      <Reference Remove="CSHTML5, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL"/>
      <Reference Remove="CSHTML5.Migration"/>
      <Reference Remove="CSHTML5.Migration, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL"/>
    </ItemGroup>
    <!-- If compiling CSHTML5.Stubs itself, we remove the reference to CSHTML5.Stubs.dll too -->
    <ItemGroup Condition="'$(NoCSHTML5StubsReference)'=='true'">
      <Reference Remove="CSHTML5.Stubs"/>
      <Reference Remove="CSHTML5.Stubs, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL"/>
    </ItemGroup>

    <!--============================================================
      Change the Build Action of XAML and TypeScript files from ["Page", "CodeAnalysisDictionary", "ApplicationDefinition", "TypeScriptCompile"] to "Content" in case the developer has not already done so.
      ============================================================-->
    <ItemGroup>
      <Content Include="@(Page)"/>
      <Page Remove="@(Page)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(CodeAnalysisDictionary)"/>
      <CodeAnalysisDictionary Remove="@(CodeAnalysisDictionary)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(ApplicationDefinition)"/>
      <ApplicationDefinition Remove="@(ApplicationDefinition)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(TypeScriptCompile)"/>
      <TypeScriptCompile Remove="@(TypeScriptCompile)"/>
    </ItemGroup>

    <!--============================================================
      Change the Build Action of JS/CSS/Image/Video/Audio/Text/Xml/Font files from ["Content", "EmbeddedResource"] to "Resource" in case the developer has not already done so.
      ============================================================-->
    <ItemGroup>
      <Resource Include="@(Content)" Condition="'%(Content.Extension)'=='.js' Or '%(Content.Extension)'=='.css' Or '%(Content.Extension)'=='.png' Or '%(Content.Extension)'=='.jpg' Or '%(Content.Extension)'=='.gif' Or '%(Content.Extension)'=='.ico' Or '%(Content.Extension)'=='.mp4' Or '%(Content.Extension)'=='.ogv' Or '%(Content.Extension)'=='.webm' Or '%(Content.Extension)'=='.3gp' Or '%(Content.Extension)'=='.mp3' Or '%(Content.Extension)'=='.ogg' Or '%(Content.Extension)'=='.txt' Or '%(Content.Extension)'=='.xml' Or '%(Content.Extension)'=='.ttf' Or '%(Content.Extension)'=='.woff' Or '%(Content.Extension)'=='.cur' Or '%(Content.Extension)'=='.json' Or '%(Content.Extension)'=='.config' Or '%(Content.Extension)'=='.ClientConfig' Or '%(Content.Extension)'=='.htm' Or '%(Content.Extension)'=='.html' Or '%(Content.Extension)'=='.resx'"/>
      <Content Remove="@(Content)" Condition="'%(Content.Extension)'=='.js' Or '%(Content.Extension)'=='.css' Or '%(Content.Extension)'=='.png' Or '%(Content.Extension)'=='.jpg' Or '%(Content.Extension)'=='.gif' Or '%(Content.Extension)'=='.ico' Or '%(Content.Extension)'=='.mp4' Or '%(Content.Extension)'=='.ogv' Or '%(Content.Extension)'=='.webm' Or '%(Content.Extension)'=='.3gp' Or '%(Content.Extension)'=='.mp3' Or '%(Content.Extension)'=='.ogg' Or '%(Content.Extension)'=='.txt' Or '%(Content.Extension)'=='.xml' Or '%(Content.Extension)'=='.ttf' Or '%(Content.Extension)'=='.woff' Or '%(Content.Extension)'=='.cur' Or '%(Content.Extension)'=='.json' Or '%(Content.Extension)'=='.config' Or '%(Content.Extension)'=='.ClientConfig' Or '%(Content.Extension)'=='.htm' Or '%(Content.Extension)'=='.html' Or '%(Content.Extension)'=='.resx'"/>
      <Resource Include="@(None)" Condition="'%(None.Extension)'=='.config' Or '%(None.Extension)'=='.ClientConfig'"/>
      <None Remove="@(None)" Condition="'%(None.Extension)'=='.config' Or '%(None.Extension)'=='.ClientConfig'"/>
      <Resource Include="@(EmbeddedResource)" Condition="'%(EmbeddedResource.Extension)'=='.js' Or '%(EmbeddedResource.Extension)'=='.css' Or '%(EmbeddedResource.Extension)'=='.png' Or '%(EmbeddedResource.Extension)'=='.jpg' Or '%(EmbeddedResource.Extension)'=='.gif' Or '%(EmbeddedResource.Extension)'=='.ico' Or '%(EmbeddedResource.Extension)'=='.mp4' Or '%(EmbeddedResource.Extension)'=='.ogv' Or '%(EmbeddedResource.Extension)'=='.webm' Or '%(EmbeddedResource.Extension)'=='.3gp' Or '%(EmbeddedResource.Extension)'=='.mp3' Or '%(EmbeddedResource.Extension)'=='.ogg' Or '%(EmbeddedResource.Extension)'=='.txt' Or '%(EmbeddedResource.Extension)'=='.xml' Or '%(EmbeddedResource.Extension)'=='.ttf' Or '%(EmbeddedResource.Extension)'=='.woff' Or '%(EmbeddedResource.Extension)'=='.cur' Or '%(EmbeddedResource.Extension)'=='.json' Or '%(EmbeddedResource.Extension)'=='.config'  Or '%(EmbeddedResource.Extension)'=='.ClientConfig' Or '%(EmbeddedResource.Extension)'=='.htm' Or '%(EmbeddedResource.Extension)'=='.html' Or '%(EmbeddedResource.Extension)'=='.resx' "/>
      <EmbeddedResource Remove="@(EmbeddedResource)" Condition="'%(EmbeddedResource.Extension)'=='.js' Or '%(EmbeddedResource.Extension)'=='.css' Or '%(EmbeddedResource.Extension)'=='.png' Or '%(EmbeddedResource.Extension)'=='.jpg' Or '%(EmbeddedResource.Extension)'=='.gif' Or '%(EmbeddedResource.Extension)'=='.ico' Or '%(EmbeddedResource.Extension)'=='.mp4' Or '%(EmbeddedResource.Extension)'=='.ogv' Or '%(EmbeddedResource.Extension)'=='.webm' Or '%(EmbeddedResource.Extension)'=='.3gp' Or '%(EmbeddedResource.Extension)'=='.mp3' Or '%(EmbeddedResource.Extension)'=='.ogg' Or '%(EmbeddedResource.Extension)'=='.txt' Or '%(EmbeddedResource.Extension)'=='.xml' Or '%(EmbeddedResource.Extension)'=='.ttf' Or '%(EmbeddedResource.Extension)'=='.woff' Or '%(EmbeddedResource.Extension)'=='.cur' Or '%(EmbeddedResource.Extension)'=='.json' Or '%(EmbeddedResource.Extension)'=='.config'  Or '%(EmbeddedResource.Extension)'=='.ClientConfig' Or '%(EmbeddedResource.Extension)'=='.htm' Or '%(EmbeddedResource.Extension)'=='.html'  Or '%(EmbeddedResource.Extension)'=='.resx'"/>
    </ItemGroup>

    <!--============================================================
      Validate that XAML files have "MSBuild:Compile" set for their "Custom Tool" property (useful for always-up-to-date Intellisense) (only during Pass 1):
      ============================================================-->
    <Error
      Condition="'%(Content.Extension)'=='.xaml' And '%(Content.Generator)'=='' And '$(IsSecondPass)'!='True' And '$(IgnoreMissingCustomTool)'!='True'"
      Text="Before you can build the project, please go to Solution Explorer, select the file '%(Content.FileName).xaml', hit F4, and enter 'MSBuild:Compile' (without the quotes) in the 'Custom Tool' property. You will need to do the same for all XAML files in the project."/>

    <!--============================================================
      EntryPointGenerator (only during Pass 2)
      ============================================================-->
    <!--<EntryPointGenerator
      Condition="'$(CSharpXamlForHtml5OutputType)'!='Library' And '$(IsSecondPass)'=='True'"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)CSHTML5_Entry_Point.cs"
      />-->

    <!--============================================================
      AssemblyAttributesGenerator
      ============================================================-->
    <Message
      Text="Starting AssemblyAttributesGenerator"
      Condition="'$(SkipAssemblyAttributesGenerator)'!='true'"
      Importance="high"/>
    <AssemblyAttributesGenerator
      Condition="'$(SkipAssemblyAttributesGenerator)'!='true'"
      IsSLMigration="$(IsSLMigration)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)CSharpXamlForHtml5_AssemblyAttributes.cs"
      IntermediateOutputAbsolutePath="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)"
      />
    <ItemGroup>
      <Compile
        Condition="'$(SkipAssemblyAttributesGenerator)'!='true'"
        Include="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)CSharpXamlForHtml5_AssemblyAttributes.cs" />
    </ItemGroup>

    <!--============================================================
      ServiceReferenceFixer (case insensitive) (only during Pass 2)
      ============================================================-->
    <ServiceReferenceFixer
      Condition="'%(Compile.Filename)%(Compile.Extension)'=='reference.cs' And '$(CSharpXamlForHtml5_SkipServiceReferenceFixer)'!='True'"
      SourceFile="%(Compile.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Compile.RelativeDir)%(Compile.Filename).g.cs"
      />
    <ItemGroup>
      <ServiceReferenceFixerProcessedFiles Include="@(Compile->'$(IntermediateOutputPath)%(RelativeDir)%(Filename).g.cs')" Condition="'%(Compile.Filename)%(Compile.Extension)'=='reference.cs' And '$(CSharpXamlForHtml5_SkipServiceReferenceFixer)'!='True'" />
      <Compile Remove="@(Compile)" Condition="'%(Compile.Filename)%(Compile.Extension)'=='reference.cs' And '$(CSharpXamlForHtml5_SkipServiceReferenceFixer)'!='True'" />
      <Compile Include="@(ServiceReferenceFixerProcessedFiles)" Condition="'$(CSharpXamlForHtml5_SkipServiceReferenceFixer)'!='True'" />
      <FileWrites Include="@(ServiceReferenceFixerProcessedFiles)" Condition="'$(CSharpXamlForHtml5_SkipServiceReferenceFixer)'!='True'"/>
    </ItemGroup>

    <!--============================================================
      ResourcesProcessor (only during Pass 2)
      ============================================================-->
    <ResourcesProcessor
      Condition="((('%(Resource.Extension)'=='.config' Or '%(Resource.Extension)'=='.ClientConfig') And '%(Resource.FileName)'!='packages') Or '%(Resource.Extension)'=='.txt' Or '%(Resource.Extension)'=='.xml' Or '%(Resource.Extension)'=='.json') And '$(IsSecondPass)'=='True'"
      SourceFile="%(Resource.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Resource.RelativeDir)%(Resource.Filename)%(Resource.Extension).g.js"
      />
    <ItemGroup>
      <ResourcesProcessorProcessedFiles Include="@(Resource->'$(IntermediateOutputPath)%(RelativeDir)%(Filename)%(Extension).g.js')" Condition="((('%(Resource.Extension)'=='.config' Or '%(Resource.Extension)'=='.ClientConfig') And '%(Resource.FileName)'!='packages') Or '%(Resource.Extension)'=='.txt' Or '%(Resource.Extension)'=='.xml' Or '%(Resource.Extension)'=='.json') And '$(IsSecondPass)'=='True'" />
      <Resource Remove="@(Resource)" Condition="((('%(Resource.Extension)'=='.config' Or '%(Resource.Extension)'=='.ClientConfig') And '%(Resource.FileName)'!='packages') Or '%(Resource.Extension)'=='.txt' Or '%(Resource.Extension)'=='.xml' Or '%(Resource.Extension)'=='.json') And '$(IsSecondPass)'=='True'" />
      <Resource Include="@(ResourcesProcessorProcessedFiles)" />
      <FileWrites Include="@(ResourcesProcessorProcessedFiles)"/>
    </ItemGroup>

    <!--============================================================
      ResXProcessor (only during Pass 2)
      ============================================================-->
    <Message
      Condition="'%(Resource.Extension)'=='.resx' And '$(IsSecondPass)'=='True'"
      Text="Starting processing .resx files"
      Importance="high"/>
    <ResXProcessor
      Condition="'%(Resource.Extension)'=='.resx' And '$(IsSecondPass)'=='True'"
      SourceFile="%(Resource.FullPath)"
      RootNamespace="$(RootNamespace)"
      SourceFileRelativePath="%(Resource.RelativeDir)%(Resource.Filename)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Resource.RelativeDir)%(Resource.Filename)%(Resource.Extension).js"
      />
    <ItemGroup>
      <ResXProcessorProcessedFiles Include="@(Resource->'$(IntermediateOutputPath)%(RelativeDir)%(Filename)%(Extension).js')" Condition="'%(Resource.Extension)'=='.resx' And '$(IsSecondPass)'=='True'" />
      <Resource Remove="@(Resource)" Condition="'%(Resource.Extension)'=='.resx' And '$(IsSecondPass)'=='True'" />
      <Resource Include="@(ResXProcessorProcessedFiles)" />
      <FileWrites Include="@(ResXProcessorProcessedFiles)"/>
    </ItemGroup>

    <!--============================================================
      TypeScriptDefToCSharp
      ============================================================-->
    <ItemGroup>
      <TypeScriptDefFiles Include="@(Content)" Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch('%(FullPath)', '.+\.d\.ts'))"/>
    </ItemGroup>
    <Message
      Text="Starting processing TypeScript Definition files: @(TypeScriptDefFiles)"
      Importance="high"/>
    <TypeScriptDefToCSharp
      InputFiles="@(TypeScriptDefFiles)"
      OutputDirectory="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)">
      <Output TaskParameter="GeneratedFiles" PropertyName="GeneratedFiles"/>
    </TypeScriptDefToCSharp>
    <Message
      Text="TypeScriptDefToCSharp output: $(ListOfGeneratedFiles)"
      Importance="high"/>
    <ItemGroup>
      <Compile
        Include="$(GeneratedFiles)"/>
    </ItemGroup>

  </Target>


  <!--============================================================
  BEFORE COMPILE
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforeCompile_NotDesignTime">
    <Message
          Text="CSHTML5 Before compile. IsSecondPass=$(IsSecondPass)"
          Importance="high"/>

    <!--============================================================
      AssemblyReferenceValidator (only during Pass 1)
      ============================================================-->
    <AssemblyReferenceValidator
      Condition="'$(IsSecondPass)'!='True' And '$(AllowAnyReferences)'!='True'"
      References="@(Reference)"
      AllowedAssemblies="mscorlib|System.Core|Microsoft.CSharp|CSHTML5|CSHTML5.Migration|CSHTML5.Stubs|Bridge"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      TypeForwardingAssemblyPath="$(MSBuildThisFileDirectory)..\tools\CSharpXamlForHtml5.Bridge.TypeForwarding.dll"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      ProjectDir="$(MSBuildProjectDirectory)"
      ReferencesPaths="@(ReferenceCopyLocalPaths)"
      ContinueOnError="ErrorAndStop"
      />

    <!--============================================================
      XamlPreprocessor (during Pass 1 and Pass 2)
      ============================================================-->
    <BeforeXamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      IsSecondPass="$(IsSecondPass)"
      Flags="$(Flags)"
      TypeForwardingAssemblyPath="$(MSBuildThisFileDirectory)..\tools\CSharpXamlForHtml5.Bridge.TypeForwarding.dll"
      ReferencesPaths="@(ReferenceCopyLocalPaths)"
      SourceAssemblyForPass2="$(MSBuildProjectDirectory)\$(OutputPath)\$(AssemblyName).dll"
      IsBridgeBasedVersion="true"
      IsProcessingCSHTML5Itself="$(NoCSHTML5Reference)"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />

    <!--============================================================
      Process files which have been added as link to project.
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '%(Content.Extension)'=='.xaml' And '%(Content.Link)'!='' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      SourceFile="%(Content.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Content.Link).g.cs"
      FileNameWithPathRelativeToProjectRoot="%(Content.Link)"
      AssemblyNameWithoutExtension="$(AssemblyName)"
      CoreAssemblyFiles="$(CoreAssemblyFiles)"
      IsSecondPass="$(IsSecondPass)"
      IsSLMigration="$(IsSLMigration)"
      ActivationAppPath="$(MSBuildThisFileDirectory)..\Activation\CSharpXamlForHtml5.Activation.exe"
      CSharpXamlForHtml5OutputType="$(CSharpXamlForHtml5OutputType)"
      OverrideOutputOnlyIfSourceHasChanged="false"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />
    <!--============================================================
      Process files which have been added directly to the project.
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '%(Content.Extension)'=='.xaml' And '%(Content.Link)'=='' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      SourceFile="%(Content.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Content.RelativeDir)%(Content.Filename)%(Content.Extension).g.cs"
      FileNameWithPathRelativeToProjectRoot="%(Content.RelativeDir)%(Content.Filename)%(Content.Extension)"
      AssemblyNameWithoutExtension="$(AssemblyName)"
      CoreAssemblyFiles="$(CoreAssemblyFiles)"
      IsSecondPass="$(IsSecondPass)"
      IsSLMigration="$(IsSLMigration)"
      ActivationAppPath="$(MSBuildThisFileDirectory)..\Activation\CSharpXamlForHtml5.Activation.exe"
      CSharpXamlForHtml5OutputType="$(CSharpXamlForHtml5OutputType)"
      OverrideOutputOnlyIfSourceHasChanged="false"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />
    <AfterXamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      IsSecondPass="$(IsSecondPass)"
      Flags="$(Flags)"
      />

    <ItemGroup>
      <!--============================================================
      Make the list of XAML files to convert to CS that are defined in the project.
      ============================================================-->
      <ProcessedFiles Include="@(Content->'$(IntermediateOutputPath)%(RelativeDir)%(Filename)%(Extension).g.cs')" Condition="'%(Extension)'=='.xaml' And '%(Content.Link)'=='' And '$(SkipXamlPreprocessor)'!='true' And ('$(NoCSHTML5Reference)'!='true' Or '$(IsSecondPass)'=='True')"/>
      <!--============================================================
      Make the list of XAML files to convert to CS that are defined outside the project (i.e added as link).
      ============================================================-->
      <ProcessedFiles2 Include="@(Content->'$(IntermediateOutputPath)%(Link).g.cs')" Condition="'%(Extension)'=='.xaml' And '%(Content.Link)'!='' And '$(SkipXamlPreprocessor)'!='true' And ('$(NoCSHTML5Reference)'!='true' Or '$(IsSecondPass)'=='True')"/>
      <!--============================================================
      Remove the XAML files from the solution and include the generated CS files.
      ============================================================-->
      <Content Remove="@(Content)" Condition="'%(Content.Extension)'=='.xaml'" />
      <Compile Include="@(ProcessedFiles)" />
      <Compile Include="@(ProcessedFiles2)" />
    </ItemGroup>

  </Target>

  <!--============================================================
  BEFORE POST BUILD
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforePostBuild" BeforeTargets="PostBuildEvent">
    <Message
          Text="CSHTML5 Before post build. IsSecondPass=$(IsSecondPass)"
          Importance="high"/>
    <ItemGroup>
      <OutputAssembly Include="$(MSBuildProjectDirectory)\$(OutputPath)\$(AssemblyName).dll" />
    </ItemGroup>

    <!--============================================================
      OutputPathsEraser (only during Pass 2)
      ============================================================-->
    <OutputPathsEraser
      Condition="'$(CSharpXamlForHtml5OutputType)'!='Library' And '$(IsSecondPass)'=='True'"
      SourceAssembly="$(MSBuildProjectDirectory)\$(OutputPath)\$(AssemblyName).dll"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      />

    <!--============================================================
      ResourceExtractorAndCopier (only during Pass 2)
      ============================================================-->
    <ResourcesExtractorAndCopier
      Condition="'$(CSharpXamlForHtml5OutputType)'!='Library' And '$(IsSecondPass)'=='True' And '$(SkipResourcesExtractorAndCopier)'!='true'"
      SourceAssembly="$(MSBuildProjectDirectory)\$(OutputPath)\$(AssemblyName).dll"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      AssembliesToIgnore="mscorlib|System.Core|Microsoft.CSharp|JSIL.Meta|Bridge"
      SupportedExtensions=".js|.css|.png|.jpg|.gif|.ico|.mp4|.ogv|.webm|.3gp|.mp3|.ogg|.ttf|.woff|.cur|.htm|.html"
      IsBridgeBasedVersion="true"
      TypeForwardingAssemblyPath="$(MSBuildThisFileDirectory)..\tools\CSharpXamlForHtml5.Bridge.TypeForwarding.dll"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      CoreAssemblyFiles="$(CoreAssemblyFiles)"
      >
      <Output TaskParameter="CopiedResXFiles" PropertyName="CopiedResXFiles"/>
      <Output TaskParameter="IsSuccess" PropertyName="ResourceExtractorAndCopierIsSuccess"/>
    </ResourcesExtractorAndCopier>

    <!--============================================================
      Wrapper (only during Pass 2)
      ============================================================-->
    <Wrapper_BridgeVersion
      Condition="'$(CSharpXamlForHtml5OutputType)'!='Library' And '$(IsSecondPass)'=='True'"
      SourceLibrariesDirectories="$(MSBuildThisFileDirectory)..\js_css\"
      PathOfAssemblyThatContainsEntryPoint="%(OutputAssembly.FullPath)"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      ListOfResXGeneratedFiles="$(CopiedResXFiles)"
      AssemblyNameWithoutExtension="$(AssemblyName)"
      />

    <!--============================================================
      Launch the second pass (only during Pass 1)
      ============================================================-->
    <MSBuild
      Condition="'$(IsSecondPass)'!='True'"
      Projects="$(MSBuildProjectFile)"
      Properties="IsSecondPass=True;EnableBridgeCompilation=True"
      />

    <!--============================================================
      Enable the Post Build event only during Pass 2 (to avoid calling the Post Build event twice)
      ============================================================-->
    <PropertyGroup Condition="'$(IsSecondPass)'!='True'">
      <!-- This will override the the PostBuild event during Pass 1 with a useless command ("echo") -->
      <PostBuildEvent>echo </PostBuildEvent>
    </PropertyGroup>

  </Target>


  <!--============================================================
  BEFORE BRIDGE COMPILER
  ============================================================-->
  <Target Name="BeforeBridgeNetCompilerTaskCommon">
    <Message
          Text="CSHTML5 before Bridge.NET task. IsSecondPass=$(IsSecondPass)"
          Importance="high"/>

    <!-- Nothing to do at the moment -->
  </Target>




  <!--============================================================
  DESIGN-TIME COMPILATION
  ============================================================-->

  <PropertyGroup>
    <CoreCompileDependsOn>
      BeforeCoreCompile;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
  </PropertyGroup>

  <Target Name="BeforeCoreCompile">
    <CallTarget Condition="'$(IsNotDesignTimeCompilation)' != 'true'"
      Targets="DesignTimeCompilation" />
  </Target>

  <Target Name="DesignTimeCompilation">
    <Message
      Text="CSHTML5 Design-Time Compilation started"
      Importance="high"/>

    <!--============================================================
      Change the Build Action of XAML and TypeScript files from ["Page", "CodeAnalysisDictionary", "ApplicationDefinition"] to "Content" in case the developer has not already done so.
      ============================================================-->
    <ItemGroup>
      <Content Include="@(Page)"/>
      <Page Remove="@(Page)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(CodeAnalysisDictionary)"/>
      <CodeAnalysisDictionary Remove="@(CodeAnalysisDictionary)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(ApplicationDefinition)"/>
      <ApplicationDefinition Remove="@(ApplicationDefinition)"/>
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(TypeScriptCompile)"/>
      <TypeScriptCompile Remove="@(TypeScriptCompile)"/>
    </ItemGroup>

    <!--============================================================
      TypeScriptDefToCSharp
      ============================================================-->
    <ItemGroup>
      <TypeScriptDefFiles Include="@(Content)" Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch('%(FullPath)', '.+\.d\.ts'))"/>
    </ItemGroup>
    <Message
      Text="Starting processing TypeScript Definition files: @(TypeScriptDefFiles)"
      Importance="high"/>
    <TypeScriptDefToCSharp
      InputFiles="@(TypeScriptDefFiles)"
      OutputDirectory="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)"
      NoRecompile="true">
      <Output TaskParameter="GeneratedFiles" PropertyName="GeneratedFiles"/>
    </TypeScriptDefToCSharp>
    <Message
      Text="TypeScriptDefToCSharp output: $(ListOfGeneratedFiles)"
      Importance="high"/>
    <ItemGroup>
      <Compile
        Include="$(GeneratedFiles)"/>
    </ItemGroup>

    <!--============================================================
      AssemblyReferenceValidator
      ============================================================-->
    <AssemblyReferenceValidator
      Condition="'$(IsSecondPass)'!='True' And '$(AllowAnyReferences)'!='True'"
      References="@(Reference)"
      AllowedAssemblies="mscorlib|System.Core|Microsoft.CSharp|CSHTML5|CSHTML5.Migration|CSHTML5.Stubs|Bridge"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      TypeForwardingAssemblyPath="$(MSBuildThisFileDirectory)..\tools\CSharpXamlForHtml5.Bridge.TypeForwarding.dll"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      ProjectDir="$(MSBuildProjectDirectory)"
      ReferencesPaths="@(ReferenceCopyLocalPaths)"
      ContinueOnError="ErrorAndStop"
      />

    <!--============================================================
      XamlPreprocessor
      ============================================================-->
    <BeforeXamlPreprocessor
      Condition="'$(IsSecondPass)'!='True' And '$(SkipXamlPreprocessor)'!='true' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      IsSecondPass="false"
      Flags="$(Flags)"
      TypeForwardingAssemblyPath="$(MSBuildThisFileDirectory)..\tools\CSharpXamlForHtml5.Bridge.TypeForwarding.dll"
      ReferencesPaths="@(ReferenceCopyLocalPaths)"
      IsBridgeBasedVersion="true"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />

    <!--============================================================
      Process files which have been added as link to project.
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(IsSecondPass)'!='True' And '%(Content.Extension)'=='.xaml' And '%(Content.Link)'!='' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      SourceFile="%(Content.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Content.Link).g.cs"
      FileNameWithPathRelativeToProjectRoot="%(Content.Link)"
      AssemblyNameWithoutExtension="$(AssemblyName)"
      CoreAssemblyFiles="$(CoreAssemblyFiles)"
      IsSecondPass="false"
      IsSLMigration="$(IsSLMigration)"
      ActivationAppPath="$(MSBuildThisFileDirectory)..\Activation\CSharpXamlForHtml5.Activation.exe"
      CSharpXamlForHtml5OutputType="$(CSharpXamlForHtml5OutputType)"
      OverrideOutputOnlyIfSourceHasChanged="false"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />
    <!--============================================================
      Process files which have been added directly to the project.
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(IsSecondPass)'!='True' And '%(Content.Extension)'=='.xaml' And '%(Content.Link)'=='' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      SourceFile="%(Content.FullPath)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(Content.RelativeDir)%(Content.Filename)%(Content.Extension).g.cs"
      FileNameWithPathRelativeToProjectRoot="%(Content.RelativeDir)%(Content.Filename)%(Content.Extension)"
      AssemblyNameWithoutExtension="$(AssemblyName)"
      CoreAssemblyFiles="$(CoreAssemblyFiles)"
      IsSecondPass="false"
      IsSLMigration="$(IsSLMigration)"
      ActivationAppPath="$(MSBuildThisFileDirectory)..\Activation\CSharpXamlForHtml5.Activation.exe"
      CSharpXamlForHtml5OutputType="$(CSharpXamlForHtml5OutputType)"
      OverrideOutputOnlyIfSourceHasChanged="false"
      OutputRootPath="$(Cshtml5OutputRootPath)"
      OutputAppFilesPath="$(Cshtml5OutputAppFilesPath)"
      OutputLibrariesPath="$(Cshtml5OutputLibrariesPath)"
      OutputResourcesPath="$(Cshtml5OutputResourcesPath)"
      Flags="$(Flags)"
      IsBridgeBasedVersion="true"
      NameOfAssembliesThatDoNotContainUserCode="Bridge"
      />

    <AfterXamlPreprocessor
      Condition="'$(IsSecondPass)'!='True' And '$(SkipXamlPreprocessor)'!='true' And '$(IsFirstPassAndProcessingCSHTML5Itself)'!='True'"
      IsSecondPass="false"
      Flags="$(Flags)"
      />

    <ItemGroup>
      <!--============================================================
      Make the list of XAML files to convert to CS that are defined in the project.
      ============================================================-->
      <ProcessedFiles Include="@(Content->'$(IntermediateOutputPath)%(RelativeDir)%(Filename)%(Extension).g.cs')" Condition="'%(Extension)'=='.xaml' And '%(Content.Link)'=='' And '$(SkipXamlPreprocessor)'!='true' And '$(NoCSHTML5Reference)'!='true'"/>
      <!--============================================================
      Make the list of XAML files to convert to CS that are defined outside the project (i.e added as link).
      ============================================================-->
      <ProcessedFiles2 Include="@(Content->'$(IntermediateOutputPath)%(Link).g.cs')" Condition="'%(Extension)'=='.xaml' And '%(Content.Link)'!='' And '$(SkipXamlPreprocessor)'!='true' And '$(NoCSHTML5Reference)'!='true'"/>

      <!--============================================================
      Remove the XAML files from the solution and include the generated CS files.
      ============================================================-->
      <Content Remove="@(Content)" Condition="'%(Content.Extension)'=='.xaml'" />
      <Compile Include="@(ProcessedFiles)" />
      <Compile Include="@(ProcessedFiles2)" />
    </ItemGroup>
    <Message
      Text="CSHTML5 Design-Time Compilation ended"
      Importance="high"/>
  </Target>

</Project>
